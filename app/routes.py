# app/routes.py
from flask import Blueprint, request, jsonify
from app.agents.urban_agent import UrbanAgent

# Create a Blueprint for the Urban Copilot API
urban_bp = Blueprint('urban_bp', __name__)

# Create an instance of the UrbanAgent
agent = UrbanAgent()

@urban_bp.before_request
def log_request():
    """
    Log the incoming request before processing.
    This function logs the HTTP method and the URL of the request.
    """
    print(f"Request: {request.method} {request.url}")

@urban_bp.after_request
def log_response(response):
    """
    Log the outgoing response after processing.
    This function logs the status code of the response.
    """
    print(f"Response: {response.status_code}")
    return response

@urban_bp.route("/api/ask", methods=["POST"])
def ask():
    """
    Handle a POST request to the /api/ask endpoint.
    This endpoint processes a question sent in the request body and returns a response
    generated by the UrbanAgent.

    Request format:
    - JSON body with a "question" field containing the user's question.

    Response format:
    - JSON with a "response" field containing the agent's answer.
    """
    # Get the question from the request JSON
    data = request.json
    question = data.get("question")  # Get the 'question' from the request

    if question:
        # Use the UrbanAgent to process the question
        response = agent.run(question)
        # Return the response in JSON format
        return jsonify({"response": response}), 200  # HTTP 200 OK
    else:
        # If no question is provided, return an error message
        return jsonify({"error": "No question provided"}), 400  # HTTP 400 Bad Request


