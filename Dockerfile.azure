# Use the official Python image as the base image
FROM python:3.10-slim-bookworm

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PORT=80
ENV WEBSITES_PORT=80

# Set the working directory in the container
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt requests

# Copy application code
COPY . .

# Make sure startup script is executable
COPY startup.sh /startup.sh
RUN chmod +x /startup.sh

# Ensure gunicorn and all dependencies are installed
RUN pip install --no-cache-dir gunicorn Flask-Migrate psycopg2-binary

# For Azure App Service, we should keep root user
# This is because Azure App Service expects certain permissions
# Expose the port the app runs on
EXPOSE 80

# Create a simple health check script that's more robust and has a timeout
RUN echo '#!/bin/bash\necho "Checking service health..."\ncurl -s -f -m 5 -o /dev/null http://localhost:${PORT:-80}/ || { echo "Health check failed, but continuing startup"; exit 0; }' > /app/health-check.sh && \
    chmod +x /app/health-check.sh

# Command to run the application using our startup script
CMD ["/startup.sh"]
